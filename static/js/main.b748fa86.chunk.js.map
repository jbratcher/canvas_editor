{"version":3,"sources":["canvas/Menu.js","canvas/index.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMenuOpen","menuOpened","state","setState","menuOpenIcon","menuOpenStyle","maxHeight","transform","menuCloseIcon","menuCloseStyle","console","log","_this$props","circleSelected","clearCanvas","drawAttributes","handleInputChange","handleInputFocus","handleSelect","inputCircleRadius","inputFillColor","inputStrokeColor","inputHeight","inputWidth","squareSelected","triangleSelected","xOffset","yOffset","_this$state","react_default","a","createElement","className","id","name","onClick","style","backgroundColor","borderColor","href","onChange","onFocus","pattern","value","type","Component","Canvas","ctx","canvasWidth","canvasHeight","clearRect","updateCanvas","_this$state2","drawCircle","drawSquare","drawTriangle","_this$state3","drawWidth","Number","drawHeight","fillStyle","fillRect","strokeStyle","strokeRect","_this$state4","beginPath","arc","Math","PI","fill","stroke","concat","_this$state5","moveTo","lineTo","e","defineProperty","target","handleResize","refs","canvasContainer","offsetHeight","offsetWidth","canvas","getContext","width","height","rect","window","addEventListener","removeEventListener","_this$state6","Fragment","canvas_Menu","ref","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b748fa86.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.scss';\n\nclass Menu extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {\n          menuOpened: false,\n          menuOpenIcon: \"fas fa-angle-double-down\",\n          menuOpenStyle: {maxHeight: \"10rem\", transform: \"scaleY(1)\"},\n          menuCloseIcon: \"fas fa-angle-double-up\",\n          menuCloseStyle: {maxHeight: \"0\", transform: \"scaleY(0)\"}\n        };\n    }\n    \n    componentDidMount() {\n     \n      console.log(\"Menu Component loaded state: \", this.state);\n      \n    }\n    \n    handleMenuOpen = () => {\n      \n      const { menuOpened } = this.state;\n      \n      this.setState({\n        menuOpened: !menuOpened\n      });\n      \n    }\n    \n  render() {\n      \n    const {\n      circleSelected,\n      clearCanvas, \n      drawAttributes,\n      handleInputChange,\n      handleInputFocus,\n      handleSelect,\n      inputCircleRadius,\n      inputFillColor,\n      inputStrokeColor,\n      inputHeight,\n      inputWidth,\n      squareSelected,\n      triangleSelected,\n      xOffset,\n      yOffset\n    } = this.props;\n    \n    const { \n      menuCloseIcon,\n      menuCloseStyle,\n      menuOpened,\n      menuOpenIcon,\n      menuOpenStyle\n    } = this.state;\n      \n    return (\n      \n      <section className=\"menuContainer\" id=\"menuContainer\">\n      \n        <section className=\"functionsContainer\">\n        \n          \n          <button \n            className=\"drawSquare\" \n            name=\"squareSelected\"\n            onClick={handleSelect}\n            style={squareSelected \n                    ? {backgroundColor: inputFillColor, borderColor: inputStrokeColor} \n                    : null\n                  }\n          >\n          </button>\n          \n          <button \n            className=\"drawCircle\"\n            name=\"circleSelected\"\n            onClick={handleSelect}\n            style={circleSelected \n                    ? {backgroundColor: inputFillColor, borderColor: inputStrokeColor} \n                    : null\n                  }\n          >\n          </button>\n          \n          <button \n            className=\"drawTriangle\" \n            name=\"triangleSelected\"\n            onClick={handleSelect}\n            style={triangleSelected \n                    ? {backgroundColor: inputFillColor, borderColor: inputStrokeColor} \n                    : null\n                  }\n          >\n            \n\n          </button>\n\n          <button \n            className=\"clearCanvas\" \n            onClick={clearCanvas}\n          >\n            Clear Canvas\n          </button>\n          \n        </section>\n        \n        <section className=\"attributesMenu\" id=\"attributesMenu\">\n        \n          <a href=\"#attributeInputs\" id=\"openNav\">\n            <i \n              className={menuOpened ? menuCloseIcon : menuOpenIcon}\n              onClick={this.handleMenuOpen}\n            ></i>\n          </a>\n          \n          <section \n            className=\"attributeInputs\" \n            id=\"attributeInputs\"\n            style={menuOpened ? menuOpenStyle : menuCloseStyle}\n          >\n          \n            <section className=\"column\">\n              <label>x: \n                <input \n                  name=\"xOffset\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={xOffset}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n              \n              <label>y: \n                <input \n                  name=\"yOffset\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={yOffset}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n            </section>\n            \n            { squareSelected ?\n            \n            <section className=\"column\">\n            \n              <label>width: \n                <input \n                  name=\"inputWidth\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={inputWidth}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n              \n              <label>height:\n                <input \n                  name=\"inputHeight\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={inputHeight}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n              \n            </section>\n            \n            : null }\n            \n            { circleSelected ?\n            \n            <section className=\"column\">\n              \n              <label>radius:\n                <input \n                  name=\"inputCircleRadius\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={inputCircleRadius}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n              \n            </section>\n            \n            : null }\n            \n            <section className=\"column\">\n              \n              <label>fill color:\n                <input \n                  name=\"inputFillColor\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={inputFillColor}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n              \n              <label>stroke color:\n                <input \n                  name=\"inputStrokeColor\"\n                  onChange={handleInputChange}\n                  onFocus={handleInputFocus}\n                  pattern=\"[0-9]*\" \n                  value={inputStrokeColor}\n                  type=\"text\" \n                >\n                </input>\n              </label>\n              \n            </section>\n            \n            <button \n              className=\"drawAttributesButton\" \n              onClick={drawAttributes}\n            >\n              Draw\n            </button>\n            \n          </section>\n          \n        </section>\n          \n      </section>\n      \n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport Menu from './Menu';\nimport '../App.scss';\n\nclass Canvas extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {\n          ctx: null,\n          canvasHeight: 0,\n          canvasWidth: 0,\n          circleSelected: false,\n          xOffset: 0,\n          yOffset: 0,\n          inputCircleRadius: 1,\n          inputFillColor: \"\",\n          inputHeight: 0,\n          inputStrokeColor: \"\",\n          inputWidth: 0,\n          squareSelected: false,\n          triangleSelected: false\n        };\n    }\n    \n    clearCanvas = () => {\n      const {ctx, canvasWidth, canvasHeight} = this.state;\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      this.updateCanvas();\n    }\n    \n    drawAttributes = () => {\n      const { circleSelected, squareSelected, triangleSelected } = this.state;\n      return circleSelected\n       ? this.drawCircle()\n       : squareSelected\n       ? this.drawSquare()\n       : triangleSelected\n       ? this.drawTriangle()\n       : null;\n    }\n    \n    drawSquare = () => {\n      const {ctx, xOffset, yOffset, inputFillColor, inputStrokeColor, inputHeight, inputWidth} = this.state;\n      let drawWidth = (Number(inputWidth) + Number(xOffset));\n      let drawHeight = (Number(inputHeight) + Number(yOffset));\n      ctx.fillStyle = inputFillColor;\n      ctx.fillRect(Number(xOffset), Number(yOffset), drawWidth, drawHeight);\n      ctx.strokeStyle = inputStrokeColor;\n      ctx.strokeRect(Number(xOffset), Number(yOffset), drawWidth, drawHeight);\n      console.log(\"Square drawn at:\", \"\\nx1: \", xOffset, \"\\ny1: \", yOffset, \"\\nx2: \", drawWidth, \"\\ny2: \", drawHeight);\n      console.log(this.state);\n    }\n    \n    drawCircle = () => {\n      const {ctx, inputCircleRadius, inputFillColor, inputStrokeColor, xOffset, yOffset} = this.state;\n      ctx.beginPath();\n      ctx.arc(Number(xOffset), Number(yOffset), Number(inputCircleRadius,), 0, 2 * Math.PI);\n      ctx.fillStyle = inputFillColor;\n      ctx.fill();\n      ctx.strokeStyle = inputStrokeColor;\n      ctx.stroke();\n      console.log(`Cicle drawn at ${xOffset}, ${yOffset}`);\n      console.log(this.state);\n    }\n    \n    drawTriangle = () => {\n      const {ctx, inputFillColor, inputStrokeColor} = this.state;\n      ctx.beginPath();\n      ctx.moveTo(75, 50);\n      ctx.lineTo(100, 75);\n      ctx.lineTo(100, 25);\n      ctx.fillStyle = inputFillColor;\n      ctx.fill();\n      ctx.strokeStyle = inputStrokeColor;\n      ctx.stroke();\n      console.log(this.state);\n    }\n    \n    handleInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(e.target.name);\n    }\n    \n    handleInputFocus = e => {\n      e.target.value = \"\";\n      console.log(e.target.name);\n    }\n    \n    handleResize = () => {\n      let canvasHeight = this.refs.canvasContainer.offsetHeight;\n      let canvasWidth = this.refs.canvasContainer.offsetWidth;\n      this.setState({\n      canvasHeight: canvasHeight,\n      canvasWidth: canvasWidth\n    }, this.updateCanvas());\n      \n    }\n    \n    handleSelect = e => {\n      console.log(e.target.name);\n      return !(this.state[e.target.name])\n        ? this.setState({\n            [e.target.name]: true\n          })  \n        : this.setState({\n          [e.target.name]: false\n        });\n    }\n    \n    updateCanvas() {\n      let canvasHeight = this.refs.canvasContainer.offsetHeight;\n      let canvasWidth = this.refs.canvasContainer.offsetWidth;\n      const ctx = this.refs.canvas.getContext('2d');\n      ctx.canvas.width  = canvasWidth;\n      ctx.canvas.height = canvasHeight;\n      ctx.fillStyle = \"#fff\";\n      ctx.rect(5,0, ctx.canvas.width-10, ctx.canvas.height);\n      ctx.fill();\n      ctx.stroke();\n      console.log(\"Canvas size: \\n\", \"Width:\", canvasWidth, \"Height\", canvasHeight);\n    }\n    \n    componentDidMount() {\n     \n      this.setState({\n        ctx: this.refs.canvas.getContext('2d'),\n        canvasHeight: this.refs.canvasContainer.offsetHeight,\n        canvasWidth: this.refs.canvasContainer.offsetWidth\n      });\n\n      this.updateCanvas();\n      \n      window.addEventListener(\"resize\", this.handleResize);\n      \n      console.log(\"Canvas Component loaded state: \", this.state);\n      \n    }\n    \n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n    \n  render() {\n    \n    const { \n      canvasHeight,\n      canvasWidth,\n      circleSelected,\n      inputCircleRadius,\n      inputFillColor,\n      inputHeight,\n      inputStrokeColor,\n      inputWidth,\n      squareSelected,\n      triangleSelected,\n      xOffset,\n      yOffset\n    } = this.state;\n    \n    return (\n      \n      <React.Fragment>\n      \n        <Menu \n          circleSelected={circleSelected}\n          clearCanvas={this.clearCanvas}\n          drawAttributes={this.drawAttributes}\n          drawCircle={this.drawCircle}\n          drawSquare={this.drawSquare}\n          drawTriangle={this.drawTriangle}\n          handleInputChange={this.handleInputChange}\n          handleInputFocus={this.handleInputFocus}\n          handleSelect={this.handleSelect}\n          inputCircleRadius={inputCircleRadius}\n          inputFillColor={inputFillColor}\n          inputHeight={inputHeight}\n          inputStrokeColor={inputStrokeColor}\n          inputWidth={inputWidth}\n          squareSelected={squareSelected}\n          triangleSelected={triangleSelected}\n          xOffset={xOffset}\n          yOffset={yOffset}\n          \n        />\n      \n        <section className=\"canvasContainer\" ref=\"canvasContainer\">\n          \n          <canvas ref=\"canvas\" height=\"100%\" width=\"100%\">\n            Canvas (Your browser doesn't support the canvas element).\n          </canvas>\n          \n          <section className=\"canvasDimensions\"><b>Canvas Size:</b> {canvasWidth} x {canvasHeight}</section>\n        \n        </section>\n      \n      </React.Fragment>\n      \n    );\n  }\n}\n\nexport default Canvas;\n","import React, { Component } from 'react';\nimport Canvas from './canvas'\nimport './App.scss';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state={};\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      \n        <header className=\"Header\">\n          <h1 className=\"Tagline\">Canvas Editor</h1>\n        </header>\n        \n        <main>\n        \n          <Canvas />\n        \n        </main>\n        \n        <footer className=\"Footer\">\n          <p>Canvas Editor 2018</p>\n        </footer>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}